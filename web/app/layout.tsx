import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import { BottomBarComponent } from "@/components/components-bottom-bar";
import { ThirdwebProvider } from "thirdweb/react";
import { useSendTransaction } from "thirdweb/react";
import { getContract, prepareContractCall } from "thirdweb";
import { sepolia, hardhat } from "thirdweb/chains";
import { client } from "./client";
import { useContext } from "react";
import { ContractContext } from "./contractContext";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});
const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const contract = getContract({
    address: process.env.NEXT_PUBLIC_CONTRACT_ADDRESS,
    chain: process.env.NEXT_PUBLIC_CHAIN === "local" ? hardhat : sepolia,
    client,
  });

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <ThirdwebProvider>
          <ContractContext.Provider value={contract}>
            {children}
          </ContractContext.Provider>
        </ThirdwebProvider>

        <BottomBarComponent />
      </body>
    </html>
  );
}
